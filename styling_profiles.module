<?php

/**
 * @file
 */

use Drupal\Core\Asset\AttachedAssetsInterface;
use Drupal\styling_profiles\Form\ProfileForm;

/**
 *
 */
function styling_profiles_entity_view_alter(&$variables) {
  $variables['#cache']['contexts'][] = 'styling_profiles';
}

/**
 * Implements hook_page_attachments_alter().
 *
 * Add dummy library to trigger hook_profiles_css_alter.
 */
function styling_profiles_page_attachments_alter(array &$attachments) {
  $styleProfileRuleHandlerManager = \Drupal::service('styling_profile.service.rule_handler_manager');
  $attachments['#attached']['library'][] = 'styling_profiles/' . $styleProfileRuleHandlerManager->getStylingProfile();
}

/**
 * Implements hook_profiles_css_alter().
 *
 * Rewrite CSS paths to corresponding files in styling profile.
 */
function styling_profiles_css_alter(&$css, AttachedAssetsInterface $assets) {
  $styleProfileRuleHandlerManager = \Drupal::service('styling_profile.service.rule_handler_manager');
  $profile = $styleProfileRuleHandlerManager->getStylingProfile();

  $cssAltered = [];
  foreach (array_keys($css) as $filename) {
    $alteredFilename = str_replace('themes/custom', 'sites/default/files/styling_profiles/' . $profile, $filename);
    if (file_exists($alteredFilename)) {
      $cssAltered[$alteredFilename] = $css[$filename];
      $cssAltered[$alteredFilename]['data'] = $alteredFilename;
    }
    else {
      $cssAltered[$filename] = $css[$filename];
    }
  }
  $css = $cssAltered;
}

/**
 * Implements hook_iq_scss_compiler_post_compile.
 */
function styling_profiles_iq_scss_compiler_pre_compile($compilationService)
{
  // Add styling profile directory for compilation.
  $compilationService->addSource(\Drupal::root() . '/sites/default/files/styling_profiles');

  // Prepare sass and defintion file for each profile.
  $profiles = \Drupal::entityTypeManager()->getStorage('styling_profile')->loadMultiple();
  foreach ($profiles as $profile) {
    $sassManager = \Drupal::service('styling_profile.service.sass_manager');
    $sassManager->provideSass($profile);
    $sassManager->writeDefinitionsFile($profile);
  }
}
